"""create tables in fnb schema

Revision ID: cb61821d823a
Revises: None
Create Date: 2025-05-28 15:11:06.709347

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision: str = 'cb61821d823a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS fnb")
    
    # Check if users table exists
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_tables = inspector.get_table_names(schema='fnb')
    
    if 'users' not in existing_tables:
        op.create_table('users',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('username', sa.String(50), nullable=False),
            sa.Column('email', sa.String(100), nullable=False),
            sa.Column('password', sa.String(100), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            schema='fnb'
        )
        op.create_index(op.f('ix_fnb_users_email'), 'users', ['email'], unique=True, schema='fnb')
        op.create_index(op.f('ix_fnb_users_id'), 'users', ['id'], unique=False, schema='fnb')
    
    if 'food_logs' not in existing_tables:
        op.create_table('food_logs',
            sa.Column('userid', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(), nullable=True),
            sa.Column('registration_id', sa.Integer(), nullable=True),
            sa.Column('lunch', sa.Integer(), nullable=True),
            sa.Column('dinner', sa.Integer(), nullable=True),
            sa.Column('lunch_takenon', sa.DateTime(timezone=True), nullable=True),
            sa.Column('dinner_takenon', sa.DateTime(timezone=True), nullable=True),
            sa.PrimaryKeyConstraint('userid'),
            schema='fnb'
        )
        op.create_index(op.f('ix_fnb_food_logs_userid'), 'food_logs', ['userid'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_food_logs_registration_id'), 'food_logs', ['registration_id'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_food_logs_name'), 'food_logs', ['name'], unique=False, schema='fnb')

    if 'participants' not in existing_tables:
        op.create_table('participants',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('registrant_id', sa.Integer(), nullable=True),
            sa.Column('date', sa.DateTime(timezone=True), nullable=True),
            sa.Column('participant_type', sa.String(50), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            schema='fnb'
        )
        op.create_index(op.f('ix_fnb_participants_id'), 'participants', ['id'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_participants_registrant_id'), 'participants', ['registrant_id'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_participants_date'), 'participants', ['date'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_participants_participant_type'), 'participants', ['participant_type'], unique=False, schema='fnb')

    if 'error_logs' not in existing_tables:
        op.create_table('error_logs',
            sa.Column('user_id', sa.Integer(), nullable=True),
            sa.Column('registrant_id', sa.Integer(), nullable=True),
            sa.Column('scan_time', sa.DateTime(timezone=True), nullable=True),
            sa.Column('error', sa.Text(), nullable=True),
            schema='fnb'
        )
        op.create_index(op.f('ix_fnb_error_logs_user_id'), 'error_logs', ['user_id'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_error_logs_registrant_id'), 'error_logs', ['registrant_id'], unique=False, schema='fnb')
        op.create_index(op.f('ix_fnb_error_logs_scan_time'), 'error_logs', ['scan_time'], unique=False, schema='fnb')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_fnb_error_logs_scan_time'), table_name='error_logs', schema='fnb')
    op.drop_index(op.f('ix_fnb_error_logs_registrant_id'), table_name='error_logs', schema='fnb')
    op.drop_index(op.f('ix_fnb_error_logs_user_id'), table_name='error_logs', schema='fnb')
    op.drop_table('error_logs', schema='fnb')
    op.drop_index(op.f('ix_fnb_participants_participant_type'), table_name='participants', schema='fnb')
    op.drop_index(op.f('ix_fnb_participants_date'), table_name='participants', schema='fnb')
    op.drop_index(op.f('ix_fnb_participants_registrant_id'), table_name='participants', schema='fnb')
    op.drop_index(op.f('ix_fnb_participants_id'), table_name='participants', schema='fnb')
    op.drop_table('participants', schema='fnb')
    op.drop_index(op.f('ix_fnb_food_logs_name'), table_name='food_logs', schema='fnb')
    op.drop_index(op.f('ix_fnb_food_logs_registration_id'), table_name='food_logs', schema='fnb')
    op.drop_index(op.f('ix_fnb_food_logs_userid'), table_name='food_logs', schema='fnb')
    op.drop_table('food_logs', schema='fnb')
    op.drop_index(op.f('ix_fnb_users_id'), table_name='users', schema='fnb')
    op.drop_index(op.f('ix_fnb_users_email'), table_name='users', schema='fnb')
    op.drop_table('users', schema='fnb')
    # ### end Alembic commands ###
